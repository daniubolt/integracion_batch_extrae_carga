#INFO: SysAdmin Friendly para sincronizar ej. db certa con una instancia de mapas en amazon o cualquier servidor aislado

OJO!:XXX buscar las lineas que dicen OJO! para no saltearse cosas importantes!

OJO!:XXX NO poner cosas ESPECIFICAS de UNA integracion ACA, ver ej. viz_mapa_integracion_batch_certa

OJO!:XXX: SOLO poner aca cosas GENERICAS para CUALQUIER integracion batch que pase datos de un lado a otro

Funciona extrayendo archivos con "deltas", diferencias entre la ultima version extraida y la actual.

* En la instancia conectada a la base de CERTA (solo lectura) se pueden "deltas" poniendo en crontab
  # */5 * * * * ~/em/rt/unaInstancia SyncExtraeCerta ~/em/sync syncExtrae.js conf/cli/cv/dev.certa.extrae.js

* En la instancia conectada a la base de MAPAS (ej en amazon) se pueden carga "deltas" poniendo en crontab
	# */5 * * * * ~/em/rt/unaInstancia SyncCargaPmMapa ~/em/sync syncCargaReplicaMapa.js conf/cli/cv/dev.pm_mapa.carga.js

* Se pueden pasar los "deltas" de un servidor a otro
** guardando y leyendo los deltas de un directorio compartido (ej. en un disco de red)
** poniendo en crontab de la instancia conectada a la base CERTA (asi solo SALEN datos y no expone ningun puerto)
	# */5 * * * * ~/em/rt/unaInstancia SyncCopiaAReplica ~/em/sync syncCopiaAReplica.js conf/cli/cv/dev.pm_mapa.carga.js

==CONFIGURACION
* Se guarda en conf/ 
* Tambien son archivos javascript, se puede usar if, incluir otros, etc.
* La configuracion de UN CLIENTE DE EM (Edenor, Edesur, Cablevision, etc.) va en conf/cli/nombre_cliente y NUNCA se guarda en el repositorio, porque puede tener claves y datos de acceso de el cliente que debemos cuidar.
* En general agrega solo esos datos de conexion e incluye los archivos comunes que estan en conf/

==DELTAS
* Tienen todos logId100000 (donde "100000" es el logId mas grande incluido en ese delta)
* Son agrupados por un archivo "MANIFEST" que dice cuantas filas tiene cada parte, un checksum, etc.
* Asi podemos asegurar que SOLO se procesan deltas COMPLETOS y la base no queda inconsistente (el que copia y el que lee recorren el manifest y solo hacen commit si pudieron leer todo lo que necesitaban y los checksums dieron bien)
* los procesos guardan en ~/var/run el ultimo logid que se proceso exitosamente

OJO! XXX: para que se versionen tambien las tablas de configuracion que NO tienen LOGID en el modelo de certa, ej AREAS, hay que correr los scripts en repr_db_certa_txt/version_cfg_tables_ddl

==PARTES

* syncExtraeCerta.js que lee el ultimo logid que sincronizo, genera un delta, guarda el ultimo logid que sincronizo (o sea que cada vez que lo ejecutas, genera un delta que es un grupo de archivos con el logId maximo que se extrajo)

* syncCopiaAReplica: lee el ultimo logId que COPIO, copia los archivos que menciona el manifest, actualiza el ultimo logId que copio (en otro archivo donde lleva ese contador)

* syncCargaReplica1: lee el ultimo logid que CARGO, busca los manifest posteriores, carga ordenado mientras no haya errores, actualiza SU contador
Now

=== para pruebas
* tSetupDeltas.js genera deltas simulados (vacios) para probar la parte de transporte y carga sin conectarse a la base de certa para la extraccion

